import uuid
from datetime import datetime

class Amenity:
    """ Amenity class """

    def __init__(self, name):
        """Constructor for Amenity"""
        if name is None:
            raise ValueError("Amenity name is required!")

        self.id = str(uuid.uuid4())
        self.name = name
        self.created_at = datetime.now()
        self.updated_at = datetime.now()

    # --- Getters and Setters ---

    @property
    def name(self):
        """Getter for name"""
        return self._name

    @name.setter
    def name(self, value):
        """Setter for name"""
        # Ensure name is not empty and doesn't exceed 50 characters
        is_valid_name = 0 < len(value.strip()) <= 50
        if is_valid_name:
            self._name = value.strip()
        else:
            raise ValueError("Amenity name must be between 1 and 50 characters!")

    # --- Methods ---
    def save(self):
        """Update the updated_at timestamp whenever the object is modified"""
        self.updated_at = datetime.now()
